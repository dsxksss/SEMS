<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sems.sportseventmanagementsystem.mapper.UserMapper">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.sems.sportseventmanagementsystem.model.entity.User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="real_name" property="realName" />
        <result column="role" property="role" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="status" property="status" />
    </resultMap>

    <!-- 通用查询字段 -->
    <sql id="Base_Column_List">
        id, username, password, email, phone, real_name, role, create_time, update_time, status
    </sql>

    <!-- 添加查询用户 SQL 片段 -->
    <sql id="selectUser">
        SELECT id, username, password, email, phone, real_name, role, create_time, update_time, status
        FROM user
    </sql>

    <!-- 根据ID查询用户 -->
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE id = #{id}
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        ORDER BY create_time DESC
    </select>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="com.sems.sportseventmanagementsystem.model.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (
            username, password, email, phone, real_name, role, create_time, update_time, status
        ) VALUES (
            #{username}, #{password}, #{email}, #{phone}, #{realName}, #{role}, #{createTime}, #{updateTime}, #{status}
        )
    </insert>

    <!-- 更新用户 -->
    <update id="update" parameterType="com.sems.sportseventmanagementsystem.model.entity.User">
        UPDATE user
        SET username = #{username},
            email = #{email},
            phone = #{phone},
            real_name = #{realName},
            role = #{role},
            update_time = #{updateTime},
            status = #{status}
        WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE user
        SET password = #{newPassword},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE user
        SET status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据ID查找用户 -->
    <select id="findById" resultMap="BaseResultMap">
        <include refid="selectUser"/>
        WHERE id = #{id}
    </select>

    <!-- 根据邮箱查找用户 -->
    <select id="findByEmail" resultMap="BaseResultMap">
        <include refid="selectUser"/>
        WHERE email = #{email}
    </select>

    <!-- 查询所有用户 -->
    <select id="findAll" resultMap="BaseResultMap">
        <include refid="selectUser"/>
        ORDER BY id ASC
    </select>

    <!-- 根据角色查找用户 -->
    <select id="findByRole" resultMap="BaseResultMap">
        <include refid="selectUser"/>
        WHERE role = #{role}
        ORDER BY id ASC
    </select>

    <!-- 根据状态查找用户 -->
    <select id="findByStatus" resultMap="BaseResultMap">
        <include refid="selectUser"/>
        WHERE status = #{status}
        ORDER BY id ASC
    </select>

    <!-- 根据ID删除用户 -->
    <delete id="deleteById">
        DELETE FROM user WHERE id = #{id}
    </delete>
</mapper> 